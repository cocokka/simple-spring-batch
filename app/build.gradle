dependencies {
    implementation(project(":job1"))
    implementation(project(":job2"))
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
        )
    }
    enabled = true
}

bootJar {
    archiveFileName.set('app.jar')
    launchScript()
}

bootRun {
    mainClass = 'com.tiny.demo.app.AppApplication'
    /*systemProperties = [
            'loader.main'      : 'com.tiny.demo.app.AppApplication',
            'loader.config'    : 'file:./config/application.properties', // 指定外部配置文件路径
            'spring.config.name': 'application',
            'spring.config.location': 'file:./config/'
    ]
    jvmArgs = [
            "-Dloader.factory=org.springframework.boot.loader.launch.PropertiesLauncherFactory"
    ]*/
}

springBoot {
    buildInfo()
}